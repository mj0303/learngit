1. github는 git을 이용한 서비스를 제공하는 회사(git provider) 중 하나이다. 다른 것으로는 bigbucket, gitlab등등이 있다.
2. git은 콘솔안에 존재하는데 console이 불편한 사람들을 위해 콘솔의 명령을 비주얼화 해서 어플 형식으로 만든 것이 github desktop이다.
3. Repository는 폴더 같은 건데 git이 파일들을 보고 있는 공간이다.

## local folder를 git repository에 연결 하는 법
1. git repository생성 후 URL복사
2. local folder생성 후 terminal에 git init입력
3. git remote add remoteName(처음은 origin추천) repositoryURL

git log > commit기록 확인
git add (. > .은 현재 폴더를 의미 하므로 현재 폴더 안의 모든 파일을 의미)> 변경사항 stage area로 추가
git commit (-m ""> message옵션 추가, -help > 기능 확인) > commit하기
git push (origin main/master) > 저장소에 push
git log로 원하는 커밋의 별명을 복사 후 checkout으로 head를 옮겨서 볼 수 있음. 
git reset ( > mixed reset 커밋을 unstage area로 옮김 즉 커밋은 지우고 파일은 납둠,
     --hard > hard reset 삭제,
     --soft > soft reset unstaged area가 아닌 stage area에 옮김) (HEAD^ > head에서 한 커밋 이전으로 리셋, HEAD^^ > head에서 두 커밋 이전으로 리셋, ...)
git push origin (main/master) --force > 삭제 후 강제 업데이트
git checkout으로 특성 지점으로 간 후 git swtich -c (branch name) 하면 그 지점에서 branch생성 가능
git switch (지점 별명) -c (branch name) 으로 두 작업을 동시에 가능
branch를 github에 올리고 싶다면 git push origin (branch name)
git branch -d (branch name) > branch삭제
git commit --amend (--no-edit > commit message수정 x, -m > commit message수정)> 가장 최근의 commit을 수정함 (변경사항 add후에 명령)
git status > stage area(즉 add돼서 commit명령 시 commit될 것들)에 있는 것들은 초록색, unstaged area에 있는 것들은 빨간색 표시)
touch .gitignore 을 통해 gitignore을 만들고 거기다가 파일명을 써주면 무시 됨
현재 remote들을 보고 싶을 때는 git remove -v (remote는 github, gitlab, bitbucket같은 저장소들을 의미 하는 듯)
git remote add (이름) (url)을 통해 remote추가 가능
git remote remove (이름)을 통해 remote삭제 가능
git push (remote name) (push할 파일명) 하면 console에서 원하는 remote로 파일 push가능 i.d) git push origin main
git clone (repository url) (폴더 명) > 폴더를 생성해서 파일들을 복사 함 (fork하지 않은 코드 저장소를 clone하면 파일을 내려받을 수는 있지만 작업한 내용을 업로드는 못 함)
이렇게 fork한 파일들을 복사해서 불러와 작업한 뒤 add, commit, push한 뒤 pull request를 할 수 있음(협엽 시 필요)
-는 명령어에 옵션 추가하는 거구나

M for modified
U for untracked by git
A for added
맨위 Message for commit title
Changes에 있는 파일들은 working area에 있는 파일들이고 +버튼을 눌러서 staged change로 올리고 커밋할 수 있다.
이전 commit의 내용들이 다 합쳐진 것을 head라 한다. 즉 내가 보고 있는 곳을 말함. 이 head를 수정해서 과거로 갈 수 있다.

terminal 명령어:
> mkdir = 폴더 만들기
> touch (name) = 파일 만들기
> nano (name) = 파일 수정하기
